Default LOCALE: LC_CTYPE=en_US.UTF-8;LC_NUMERIC=it_IT.UTF-8;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=it_IT.UTF-8;LC_MESSAGES=en_US.UTF-8;LC_PAPER=it_IT.UTF-8;LC_NAME=it_IT.UTF-8;LC_ADDRESS=it_IT.UTF-8;LC_TELEPHONE=it_IT.UTF-8;LC_MEASUREMENT=it_IT.UTF-8;LC_IDENTIFICATION=it_IT.UTF-8

<<< setup, at 0s, took 1,54878e+09s


<<< generate, at 0s, took 0,00410509s

CPXPARAM_TimeLimit                               30
Tried aggregator 2 times.
MIP Presolve eliminated 9 rows and 9 columns.
Aggregator did 10 substitutions.
Reduced MIP has 111 rows, 181 columns, and 614 nonzeros.
Reduced MIP has 90 binaries, 91 generals, 0 SOSs, and 0 indicators.
Presolve time = 0,00 sec. (0,61 ticks)
Found incumbent of value 48,904487 after 0,00 sec. (1,29 ticks)
Probing fixed 7 vars, tightened 0 bounds.
Probing time = 0,00 sec. (0,36 ticks)
Cover probing fixed 0 vars, tightened 63 bounds.
Tried aggregator 1 time.
MIP Presolve eliminated 10 rows and 16 columns.
MIP Presolve modified 112 coefficients.
Reduced MIP has 101 rows, 165 columns, and 565 nonzeros.
Reduced MIP has 83 binaries, 82 generals, 0 SOSs, and 0 indicators.
Presolve time = 0,00 sec. (0,67 ticks)
Probing time = 0,00 sec. (0,30 ticks)
Clique table members: 19.
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0,00 sec. (0,58 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                           48,9045        0,0000           100,00%
      0     0       22,0806    25       48,9045       22,0806       89   54,85%
      0     0       24,6878    37       48,9045      Cuts: 50      121   49,52%
      0     0       27,0674    47       48,9045      Cuts: 32      153   44,65%
      0     0       27,1397    51       48,9045      Cuts: 19      166   44,50%
      0     0       27,2025    47       48,9045      Cuts: 12      186   44,38%
      0     0       27,2069    52       48,9045      Cuts: 15      196   44,37%
      0     0       27,2215    53       48,9045       Cuts: 4      201   44,34%
      0     0       27,2399    52       48,9045      Cuts: 15      208   44,30%
      0     0       27,2399    53       48,9045       Cuts: 9      211   44,30%
      0     0       27,2399    53       48,9045   ZeroHalf: 3      214   44,30%
*     0+    0                           31,2907       27,2399            12,95%
      0     0        cutoff             31,2907       31,2907      214    0,00%
Elapsed time = 0,08 sec. (35,75 ticks, tree = 0,01 MB, solutions = 2)

Cover cuts applied:  3
Implied bound cuts applied:  6
Flow cuts applied:  22
Zero-half cuts applied:  10
Gomory fractional cuts applied:  2

Root node processing (before b&c):
  Real time             =    0,08 sec. (35,76 ticks)
Parallel b&c, 4 threads:
  Real time             =    0,00 sec. (0,00 ticks)
  Sync time (average)   =    0,00 sec.
  Wait time (average)   =    0,00 sec.
                          ------------
Total (root+branch&cut) =    0,08 sec. (35,76 ticks)

<<< solve, at 0,27s, took 0,0836399s


OBJECTIVE: 31.29075
01/29/2019 18:42:36 900
solving time ~= 85.364990234
Done
 [[0 0 2 0 0 0 0 0 0 0]
         [3 0 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 0 0 1]
         [0 0 0 0 5 0 0 0 0 0]
         [0 4 0 0 0 0 0 0 0 0]
         [0 0 0 0 0 0 0 8 0 0]
         [0 0 0 6 0 0 0 0 0 0]
         [0 0 0 0 0 0 7 0 0 0]
         [0 0 0 0 0 9 0 0 0 0]
         [0 0 0 0 0 0 0 0 10 0]]

<<< post process, at 0,27s, took 0,000560999s

// solution (optimal) with objective 31.2907473722772
// Quality Incumbent solution:
// MILP objective                                 3,1290747372e+01
// MILP solution norm |x| (Total, Max)            6,50000e+01  1,00000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

y = [[0
             0 1 0 0 0 0 0 0 0]
             [1 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 1]
             [0 0 0 0 1 0 0 0 0 0]
             [0 1 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 1 0 0]
             [0 0 0 1 0 0 0 0 0 0]
             [0 0 0 0 0 0 1 0 0 0]
             [0 0 0 0 0 1 0 0 0 0]
             [0 0 0 0 0 0 0 0 1 0]];
x = [[0 0 2 0 0 0 0 0 0 0]
             [3 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 1]
             [0 0 0 0 5 0 0 0 0 0]
             [0 4 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 8 0 0]
             [0 0 0 6 0 0 0 0 0 0]
             [0 0 0 0 0 0 7 0 0 0]
             [0 0 0 0 0 9 0 0 0 0]
             [0 0 0 0 0 0 0 0 10 0]];

<<< done, at 0,27s, took 0,000482082s

